[{"E:\\Programming\\simple_quora\\src\\index.js":"1","E:\\Programming\\simple_quora\\src\\App.js":"2","E:\\Programming\\simple_quora\\src\\reportWebVitals.js":"3","E:\\Programming\\simple_quora\\src\\components\\controllers\\askQuestion.js":"4","E:\\Programming\\simple_quora\\src\\components\\model\\questions.js":"5","E:\\Programming\\simple_quora\\src\\components\\views\\question.js":"6","E:\\Programming\\simple_quora\\src\\components\\views\\mainPoster.js":"7","E:\\Programming\\simple_quora\\src\\components\\views\\mainGetter.js":"8","E:\\Programming\\simple_quora\\src\\components\\controllers\\voteQuestions.js":"9","E:\\Programming\\simple_quora\\src\\components\\model\\enums.js":"10","E:\\Programming\\simple_quora\\src\\components\\views\\headerBar.js":"11","E:\\Programming\\simple_quora\\src\\components\\model\\hosts.js":"12","E:\\Programming\\simple_quora\\src\\components\\controllers\\seeAnswers.js":"13","E:\\Programming\\simple_quora\\src\\components\\model\\answers.js":"14","E:\\Programming\\simple_quora\\src\\components\\views\\answer.js":"15","E:\\Programming\\simple_quora\\src\\components\\controllers\\voteAnswers.js":"16","E:\\Programming\\simple_quora\\src\\components\\pageContext.js":"17","E:\\Programming\\simple_quora\\src\\components\\controllers\\seeComments.js":"18","E:\\Programming\\simple_quora\\src\\components\\model\\comments.js":"19","E:\\Programming\\simple_quora\\src\\components\\views\\comment.js":"20","E:\\Programming\\simple_quora\\src\\components\\controllers\\login.js":"21","E:\\Programming\\simple_quora\\src\\components\\userContext.js":"22","E:\\Programming\\simple_quora\\src\\components\\model\\hash.js":"23","E:\\Programming\\simple_quora\\src\\components\\controllers\\navigation.js":"24","E:\\Programming\\simple_quora\\src\\components\\model\\user.js":"25","E:\\Programming\\simple_quora\\src\\components\\controllers\\logout.js":"26","E:\\Programming\\simple_quora\\src\\components\\views\\replies.js":"27","E:\\Programming\\simple_quora\\src\\components\\controllers\\delete.js":"28","E:\\Programming\\simple_quora\\src\\components\\bgImages\\background.js":"29","E:\\Programming\\simple_quora\\src\\components\\model\\hasVoted.js":"30"},{"size":628,"mtime":1608741107102,"results":"31","hashOfConfig":"32"},{"size":528,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":1841,"mtime":1608927644652,"results":"35","hashOfConfig":"32"},{"size":1208,"mtime":1608412984705,"results":"36","hashOfConfig":"32"},{"size":1645,"mtime":1608685048802,"results":"37","hashOfConfig":"32"},{"size":379,"mtime":1608413987050,"results":"38","hashOfConfig":"32"},{"size":377,"mtime":1608927601617,"results":"39","hashOfConfig":"32"},{"size":1943,"mtime":1608782265177,"results":"40","hashOfConfig":"32"},{"size":113,"mtime":1608266367316,"results":"41","hashOfConfig":"32"},{"size":473,"mtime":1608671076521,"results":"42","hashOfConfig":"32"},{"size":123,"mtime":1608412590064,"results":"43","hashOfConfig":"32"},{"size":1726,"mtime":1608420178215,"results":"44","hashOfConfig":"32"},{"size":1194,"mtime":1608412979253,"results":"45","hashOfConfig":"32"},{"size":1651,"mtime":1608684998838,"results":"46","hashOfConfig":"32"},{"size":1947,"mtime":1608782308434,"results":"47","hashOfConfig":"32"},{"size":152,"mtime":1608419331627,"results":"48","hashOfConfig":"32"},{"size":1807,"mtime":1608676928366,"results":"49","hashOfConfig":"32"},{"size":1224,"mtime":1608603957293,"results":"50","hashOfConfig":"32"},{"size":1857,"mtime":1608684994807,"results":"51","hashOfConfig":"32"},{"size":2798,"mtime":1608780640156,"results":"52","hashOfConfig":"32"},{"size":249,"mtime":1608599456975,"results":"53","hashOfConfig":"32"},{"size":323,"mtime":1608667995309,"results":"54","hashOfConfig":"32"},{"size":841,"mtime":1608661214563,"results":"55","hashOfConfig":"32"},{"size":1166,"mtime":1608667095917,"results":"56","hashOfConfig":"32"},{"size":408,"mtime":1608671175314,"results":"57","hashOfConfig":"32"},{"size":1338,"mtime":1608679813888,"results":"58","hashOfConfig":"32"},{"size":195,"mtime":1608684649053,"results":"59","hashOfConfig":"32"},{"size":1328,"mtime":1608753849685,"results":"60","hashOfConfig":"32"},{"size":1177,"mtime":1608781385158,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"su4cgr",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"E:\\Programming\\simple_quora\\src\\index.js",[],["132","133"],"E:\\Programming\\simple_quora\\src\\App.js",[],"E:\\Programming\\simple_quora\\src\\reportWebVitals.js",[],"E:\\Programming\\simple_quora\\src\\components\\controllers\\askQuestion.js",["134","135","136","137","138","139"],"E:\\Programming\\simple_quora\\src\\components\\model\\questions.js",[],"E:\\Programming\\simple_quora\\src\\components\\views\\question.js",["140","141","142","143","144","145"],"import React, { useContext } from 'react'\r\n\r\nimport ModeContext from \"../pageContext.js\"\r\nimport UserContext from \"../userContext.js\"\r\n\r\nimport { Voters } from '../controllers/voteQuestions.js'\r\nimport DeleteButton from \"../controllers/delete.js\"\r\nimport { deleteQuestions } from \"../model/questions.js\"\r\n\r\nexport function QuestionDisplay (props) {\r\n    const { mode, setMode } = useContext(ModeContext)\r\n    const { \r\n        userID, username, loggedIn, \r\n        setUserID, setUsername, setLoggedIn \r\n    } = useContext(UserContext)\r\n    \r\n    let htmlOutput = []\r\n\r\n    props.questions.forEach(entry => {\r\n        let date = new Date(entry.creation_time)\r\n        let options = {dateStyle: 'long', timeStyle: 'short'}\r\n\r\n        let viewQuestion = () => setMode(['answer', entry.id])\r\n\r\n        async function delQ () {\r\n            await deleteQuestions({\"id\": entry.id})\r\n        }\r\n        \r\n        htmlOutput.push(\r\n            <div className=\"headline question-headline\" id={entry.id} >\r\n                <Voters id={entry.id} votes={entry.votes} getQ={props.getQ} />\r\n                \r\n                <div className=\"textBody\" onClick={viewQuestion} >\r\n                    <div className=\"author\">{entry.author} asked:</div>\r\n                    <div className=\"mainText\">{entry.text}</div>\r\n                    <div className=\"date\">on {date.toLocaleString('en-US', options)}</div>\r\n                </div>\r\n                {entry.author === username ? <DeleteButton delFunc={delQ} /> : null}\r\n            \r\n            </div>\r\n        )\r\n    });\r\n    \r\n    return (\r\n        <div>\r\n            {htmlOutput}\r\n        </div>\r\n    )\r\n}\r\n","E:\\Programming\\simple_quora\\src\\components\\views\\mainPoster.js",[],"E:\\Programming\\simple_quora\\src\\components\\views\\mainGetter.js",[],"E:\\Programming\\simple_quora\\src\\components\\controllers\\voteQuestions.js",["146","147","148","149","150","151"],"import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport UserContext from '../userContext.js'\r\n\r\nimport { getQuestions, patchQuestions } from '../model/questions.js'\r\nimport { getHasVoted, postHasVoted } from '../model/hasVoted.js'\r\n\r\nexport function Voters (props) {\r\n    const [canVote, setCanVote] = useState()\r\n\r\n    const { \r\n        userID, username, loggedIn, \r\n        setUserID, setUsername, setLoggedIn \r\n    } = useContext(UserContext)\r\n\r\n    async function updateState () {\r\n        let response = await getHasVoted({\"user_id\": userID, \"question\": props.id})\r\n        let body = await response.json()\r\n\r\n        if (response.status >= 400) {\r\n            setCanVote(true)\r\n        } else {\r\n            setCanVote(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => updateState(), [])\r\n\r\n    async function Upvote (e) {\r\n        if (canVote) {\r\n            let currentVotes = await getQuestions({'id': props.id})\r\n            await patchQuestions({'id': props.id, 'votes': currentVotes[0].votes + 1})\r\n            await postHasVoted({\"user\": userID, \"username\": username, \"question\": props.id, \"vote_type\": \"up\"})\r\n            props.getQ()\r\n            updateState()\r\n        }\r\n    }\r\n\r\n    async function Downvote (e) {\r\n        if (canVote) {\r\n            let currentVotes = await getQuestions({'id': props.id})\r\n            await patchQuestions({'id': props.id, 'votes': currentVotes[0].votes - 1})\r\n            await postHasVoted({\"user\": userID, \"username\": username, \"question\": props.id, \"vote_type\": \"down\"})\r\n            props.getQ()\r\n            updateState()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"voteButtons\">\r\n            <div className={canVote ? \"Upvote\" : \"Upvote defunct\"} onClick={Upvote} ></div>\r\n            <div className=\"votes\">{props.votes}</div>\r\n            <div className={canVote ? \"Downvote\" : \"Downvote defunct\"} onClick={Downvote} ></div>\r\n        </div>\r\n    )\r\n}\r\n","E:\\Programming\\simple_quora\\src\\components\\model\\enums.js",[],"E:\\Programming\\simple_quora\\src\\components\\views\\headerBar.js",[],"E:\\Programming\\simple_quora\\src\\components\\model\\hosts.js",[],"E:\\Programming\\simple_quora\\src\\components\\controllers\\seeAnswers.js",["152","153"],"import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport ModeContext from \"../pageContext.js\"\r\n\r\nimport { getQuestions } from \"../model/questions.js\"\r\nimport { getAnswers, postAnswers } from \"../model/answers.js\"\r\n\r\nimport { QuestionDisplay } from \"../views/question.js\";\r\nimport { AnswerDisplay } from \"../views/answer.js\"\r\nimport { MainPoster } from \"../views/mainPoster.js\"\r\n\r\nfunction SeeAnswers (props) {\r\n    const [questionGet, setQuestionGet] = useState([])\r\n    const [answerGet, setAnswerGet] = useState([])\r\n    const [answerPost, setAnswerPost] = useState('')\r\n\r\n    const { mode, setMode } = useContext(ModeContext)\r\n\r\n    const backToQuestions = () => setMode(['question', null])\r\n\r\n    async function getQ () {\r\n        setQuestionGet(await getQuestions({'id': props.question_id}))\r\n    }\r\n\r\n    async function getA () {\r\n        setAnswerGet(await getAnswers({'question_id': props.question_id}))\r\n    }\r\n\r\n    async function postA () {\r\n        await postAnswers({\"text\": answerPost, \"author\": \"rjerling\", \"question\": props.question_id})\r\n        getA()\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQ()\r\n        getA()\r\n    }, [])  // empty array passed to prevent infinite firing\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"pageTopSwitch\">\r\n                <button className=\"mainButton\" onClick={backToQuestions}>Back to Questions Page</button>\r\n            </div>\r\n            <MainPoster setFunc={setAnswerPost} postFunc={postA} placeholder=\"Help the asker out!\" buttonText=\"Answer!\" />\r\n            <QuestionDisplay questions={questionGet} getQ={getQ} />\r\n            <AnswerDisplay answers={answerGet} getA={getA} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeeAnswers\r\n","E:\\Programming\\simple_quora\\src\\components\\model\\answers.js",[],"E:\\Programming\\simple_quora\\src\\components\\views\\answer.js",["154","155","156","157","158","159"],"import React, { useContext } from 'react'\r\n\r\nimport ModeContext from \"../pageContext.js\"\r\nimport UserContext from \"../userContext.js\"\r\n\r\nimport { Voters } from '../controllers/voteAnswers.js'\r\nimport DeleteButton from \"../controllers/delete.js\"\r\nimport { deleteAnswers } from \"../model/answers.js\"\r\n\r\nexport function AnswerDisplay (props) {\r\n    const { mode, setMode } = useContext(ModeContext)\r\n    const { \r\n        userID, username, loggedIn, \r\n        setUserID, setUsername, setLoggedIn \r\n    } = useContext(UserContext)\r\n\r\n    let htmlOutput = []\r\n\r\n    props.answers.forEach(entry => {\r\n        let date = new Date(entry.creation_time)\r\n        let options = {dateStyle: 'long', timeStyle: 'short'}\r\n\r\n        const viewAnswer = () => setMode(['comment', entry.id])\r\n\r\n        async function delA () {\r\n            await deleteAnswers({\"id\": entry.id})\r\n        }\r\n        \r\n        htmlOutput.push(\r\n            <div className=\"headline answer-headline\" id={entry.id} >\r\n                <Voters id={entry.id} q_id={entry.question} votes={entry.votes} getA={props.getA} />\r\n                \r\n                <div className=\"textBody\" onClick={viewAnswer} >\r\n                    <div className=\"author\">{entry.author} answered:</div>\r\n                    <div className=\"mainText\">{entry.text}</div>\r\n                    <div className=\"date\">on {date.toLocaleString('en-US', options)}</div>\r\n                </div>\r\n                {entry.author === username ? <DeleteButton delFunc={delA} /> : null}\r\n            \r\n            </div>\r\n        )\r\n    });\r\n    \r\n    return (\r\n        <div>\r\n            {htmlOutput}\r\n        </div>\r\n    )\r\n}\r\n","E:\\Programming\\simple_quora\\src\\components\\controllers\\voteAnswers.js",["160","161","162","163","164","165"],"import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport UserContext from \"../userContext.js\"\r\n\r\nimport { getAnswers, patchAnswers } from '../model/answers.js'\r\nimport { getHasVoted, postHasVoted } from '../model/hasVoted.js'\r\n\r\nexport function Voters (props) {\r\n    const [canVote, setCanVote] = useState(true)\r\n\r\n    const { \r\n        userID, username, loggedIn, \r\n        setUserID, setUsername, setLoggedIn \r\n    } = useContext(UserContext)\r\n\r\n    async function updateState () {\r\n        let response = await getHasVoted({\"user_id\": userID, \"answer\": props.id})\r\n        let body = await response.json()\r\n\r\n        if (response.status >= 400) {\r\n            setCanVote(true)\r\n        } else {\r\n            setCanVote(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => updateState(), [])\r\n\r\n    async function Upvote (e) {\r\n        if (canVote) {\r\n            let currentVotes = await getAnswers({'id': props.id})\r\n            await patchAnswers({'id': props.id, 'votes': currentVotes[0].votes + 1})\r\n            await postHasVoted({\"user\": userID, \"username\": username, \"answer\": props.id, \"vote_type\": \"up\"})\r\n            props.getA(props.q_id)\r\n            updateState()\r\n        }\r\n    }\r\n\r\n    async function Downvote (e) {\r\n        if (canVote) {\r\n            let currentVotes = await getAnswers({'id': props.id})\r\n            await patchAnswers({'id': props.id, 'votes': currentVotes[0].votes - 1})\r\n            await postHasVoted({\"user\": userID, \"username\": username, \"answer\": props.id, \"vote_type\": \"down\"})\r\n            props.getA(props.q_id)\r\n            updateState()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"voteButtons\">\r\n            <div className={canVote ? \"Upvote\" : \"Upvote defunct\"} onClick={Upvote} ></div>\r\n            <div className=\"votes\">{props.votes}</div>\r\n            <div className={canVote ? \"Downvote\" : \"Downvote defunct\"} onClick={Downvote} ></div>\r\n        </div>\r\n    )\r\n}\r\n","E:\\Programming\\simple_quora\\src\\components\\pageContext.js",[],"E:\\Programming\\simple_quora\\src\\components\\controllers\\seeComments.js",["166","167"],"import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport ModeContext from \"../pageContext.js\"\r\n\r\nimport { getAnswers } from \"../model/answers.js\"\r\nimport { getComments, postComments } from \"../model/comments.js\"\r\n\r\nimport { AnswerDisplay } from \"../views/answer.js\";\r\nimport { CommentDisplay } from \"../views/comment.js\"\r\nimport { MainPoster } from \"../views/mainPoster.js\"\r\n\r\nfunction SeeComments (props) {\r\n    const [answerGet, setAnswerGet] = useState([])\r\n    const [commentGet, setCommentGet] = useState([])\r\n    const [commentPost, setCommentPost] = useState('')\r\n\r\n    const { mode, setMode } = useContext(ModeContext)\r\n\r\n    async function backToAnswers () {\r\n        let question_id = await getAnswers({'id': props.answer_id})\r\n        setMode(['answer', question_id[0].question])\r\n    }\r\n\r\n    async function getA () {\r\n        setAnswerGet(await getAnswers({'id': props.answer_id}))\r\n    }\r\n\r\n    async function getC () {\r\n        setCommentGet(await getComments({'answer_id': props.answer_id}))\r\n    }\r\n\r\n    async function postC () {\r\n        await postComments({\"text\": commentPost, \"author\": \"bsun\", \"answer\": props.answer_id})\r\n        getC()\r\n    }\r\n\r\n    useEffect(() => {\r\n        getA()\r\n        getC()\r\n    }, [])  // empty array passed to prevent infinite firing\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"pageTopSwitch\">\r\n                <button className=\"mainButton\" onClick={backToAnswers}>Back to Answers Page</button>\r\n            </div>\r\n            <MainPoster setFunc={setCommentPost} postFunc={postC} placeholder=\"Comment...\" buttonText=\"Post Comment\" />\r\n            <AnswerDisplay answers={answerGet} getA={getA} />\r\n            <CommentDisplay comments={commentGet} getC={getC} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeeComments\r\n","E:\\Programming\\simple_quora\\src\\components\\model\\comments.js",[],"E:\\Programming\\simple_quora\\src\\components\\views\\comment.js",["168","169","170","171","172"],"import React, { useContext } from 'react'\r\n\r\nimport UserContext from \"../userContext.js\"\r\n\r\nimport Replies from \"./replies.js\"\r\nimport DeleteButton from \"../controllers/delete.js\"\r\nimport { deleteComments } from \"../model/comments.js\"\r\n\r\nexport function CommentDisplay (props) {\r\n    const { \r\n        userID, username, loggedIn, \r\n        setUserID, setUsername, setLoggedIn \r\n    } = useContext(UserContext)\r\n    \r\n    let htmlOutput = []\r\n\r\n    props.comments.forEach(entry => {\r\n        let date = new Date(entry.creation_time)\r\n        let options = {dateStyle: 'long', timeStyle: 'short'}\r\n\r\n        async function delC () {\r\n            await deleteComments({\"id\": entry.id})\r\n        }\r\n        \r\n        htmlOutput.push(\r\n            <div className=\"headline comment-headline\" id={entry.id}>                \r\n                <div className=\"textBody\">\r\n                    <div className=\"author\">{\r\n                        entry.originalauthor \r\n                        ? entry.author + \" replied to \" + entry.originalauthor + \":\"\r\n                        : entry.author + \" commented:\"}\r\n                    </div>\r\n                    {entry.originaltext\r\n                    ? <div className=\"replyText\">\r\n                        {`--  ${entry.originaltext}`}\r\n                    </div>\r\n                    : null\r\n                    }\r\n                    <div className=\"mainText\">{entry.text}</div>\r\n                    <div className=\"date\">on {date.toLocaleString('en-US', options)}</div>\r\n                    <Replies answer={entry.answer_id} replyto={entry.id} originalAuthor={entry.author} />\r\n                </div>\r\n                {entry.author === username ? <DeleteButton delFunc={delC} /> : null}\r\n\r\n            </div>\r\n        )\r\n    });\r\n    \r\n    return (\r\n        <div>\r\n            {htmlOutput}\r\n        </div>\r\n    )\r\n}\r\n","E:\\Programming\\simple_quora\\src\\components\\controllers\\login.js",[],"E:\\Programming\\simple_quora\\src\\components\\userContext.js",[],"E:\\Programming\\simple_quora\\src\\components\\model\\hash.js",[],"E:\\Programming\\simple_quora\\src\\components\\controllers\\navigation.js",[],"E:\\Programming\\simple_quora\\src\\components\\model\\user.js",[],"E:\\Programming\\simple_quora\\src\\components\\controllers\\logout.js",["173","174","175","176","177"],"import React, { useContext } from 'react'\r\n\r\nimport UserContext from \"../userContext.js\"\r\n\r\nfunction Logout () {\r\n    const { \r\n        userID, username, loggedIn, \r\n        setUserID, setUsername, setLoggedIn \r\n    } = useContext(UserContext)\r\n\r\n    const logout = (e) => setLoggedIn(false)\r\n\r\n    return (\r\n        <div className=\"Logout\" onClick={logout} >Logout</div>\r\n    )\r\n}\r\n\r\nexport default Logout\r\n","E:\\Programming\\simple_quora\\src\\components\\views\\replies.js",["178","179","180","181","182"],"import React, { useState, useContext } from 'react'\r\n\r\nimport { postComments } from \"../model/comments.js\"\r\n\r\nimport UserContext from \"../userContext\"\r\n\r\nfunction Replies (props) {\r\n    const [text, setText] = useState('')\r\n    const [activated, setActivated] = useState(\"off\")\r\n\r\n    const { \r\n        userID, username, loggedIn, \r\n        setUserID, setUsername, setLoggedIn \r\n    } = useContext(UserContext)\r\n\r\n    async function postC () {\r\n        await postComments({\r\n            \"text\": text,\r\n            \"author\": username,\r\n            \"answer\": props.answer,\r\n            \"replyto\": props.replyto\r\n        })\r\n    }\r\n\r\n    function expandPoster () {\r\n        if (activated === \"off\") {\r\n            setActivated(\"on\")\r\n        } else {\r\n            setActivated(\"off\")\r\n        }\r\n    }\r\n\r\n    const mode = {\r\n        \"on\": <span>\r\n            <input type=\"text\" className=\"repliesInput\" placeholder={\"@\" + props.originalAuthor} onChange={e => setText(e.target.value)} />\r\n            <button className=\"repliesPoster\" onClick={postC} >Post!</button>\r\n        </span>,\r\n        \"off\": <div /> \r\n    }\r\n    return (\r\n        <div>\r\n            <button className=\"repliesExpand\" onClick={expandPoster} >Reply to {props.originalAuthor}</button>\r\n            {mode[activated]}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Replies\r\n","E:\\Programming\\simple_quora\\src\\components\\controllers\\delete.js",[],"E:\\Programming\\simple_quora\\src\\components\\bgImages\\background.js",[],"E:\\Programming\\simple_quora\\src\\components\\model\\hasVoted.js",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":20,"column":9,"nodeType":"189","messageId":"190","endLine":20,"endColumn":15},{"ruleId":"187","severity":1,"message":"191","line":20,"column":27,"nodeType":"189","messageId":"190","endLine":20,"endColumn":35},{"ruleId":"187","severity":1,"message":"192","line":21,"column":9,"nodeType":"189","messageId":"190","endLine":21,"endColumn":18},{"ruleId":"187","severity":1,"message":"193","line":21,"column":20,"nodeType":"189","messageId":"190","endLine":21,"endColumn":31},{"ruleId":"187","severity":1,"message":"194","line":21,"column":33,"nodeType":"189","messageId":"190","endLine":21,"endColumn":44},{"ruleId":"195","severity":1,"message":"196","line":38,"column":29,"nodeType":"197","endLine":38,"endColumn":31,"suggestions":"198"},{"ruleId":"187","severity":1,"message":"199","line":11,"column":13,"nodeType":"189","messageId":"190","endLine":11,"endColumn":17},{"ruleId":"187","severity":1,"message":"188","line":13,"column":9,"nodeType":"189","messageId":"190","endLine":13,"endColumn":15},{"ruleId":"187","severity":1,"message":"191","line":13,"column":27,"nodeType":"189","messageId":"190","endLine":13,"endColumn":35},{"ruleId":"187","severity":1,"message":"192","line":14,"column":9,"nodeType":"189","messageId":"190","endLine":14,"endColumn":18},{"ruleId":"187","severity":1,"message":"193","line":14,"column":20,"nodeType":"189","messageId":"190","endLine":14,"endColumn":31},{"ruleId":"187","severity":1,"message":"194","line":14,"column":33,"nodeType":"189","messageId":"190","endLine":14,"endColumn":44},{"ruleId":"187","severity":1,"message":"191","line":12,"column":27,"nodeType":"189","messageId":"190","endLine":12,"endColumn":35},{"ruleId":"187","severity":1,"message":"192","line":13,"column":9,"nodeType":"189","messageId":"190","endLine":13,"endColumn":18},{"ruleId":"187","severity":1,"message":"193","line":13,"column":20,"nodeType":"189","messageId":"190","endLine":13,"endColumn":31},{"ruleId":"187","severity":1,"message":"194","line":13,"column":33,"nodeType":"189","messageId":"190","endLine":13,"endColumn":44},{"ruleId":"187","severity":1,"message":"200","line":18,"column":13,"nodeType":"189","messageId":"190","endLine":18,"endColumn":17},{"ruleId":"195","severity":1,"message":"201","line":27,"column":36,"nodeType":"197","endLine":27,"endColumn":38,"suggestions":"202"},{"ruleId":"187","severity":1,"message":"199","line":17,"column":13,"nodeType":"189","messageId":"190","endLine":17,"endColumn":17},{"ruleId":"195","severity":1,"message":"203","line":37,"column":8,"nodeType":"197","endLine":37,"endColumn":10,"suggestions":"204"},{"ruleId":"187","severity":1,"message":"199","line":11,"column":13,"nodeType":"189","messageId":"190","endLine":11,"endColumn":17},{"ruleId":"187","severity":1,"message":"188","line":13,"column":9,"nodeType":"189","messageId":"190","endLine":13,"endColumn":15},{"ruleId":"187","severity":1,"message":"191","line":13,"column":27,"nodeType":"189","messageId":"190","endLine":13,"endColumn":35},{"ruleId":"187","severity":1,"message":"192","line":14,"column":9,"nodeType":"189","messageId":"190","endLine":14,"endColumn":18},{"ruleId":"187","severity":1,"message":"193","line":14,"column":20,"nodeType":"189","messageId":"190","endLine":14,"endColumn":31},{"ruleId":"187","severity":1,"message":"194","line":14,"column":33,"nodeType":"189","messageId":"190","endLine":14,"endColumn":44},{"ruleId":"187","severity":1,"message":"191","line":12,"column":27,"nodeType":"189","messageId":"190","endLine":12,"endColumn":35},{"ruleId":"187","severity":1,"message":"192","line":13,"column":9,"nodeType":"189","messageId":"190","endLine":13,"endColumn":18},{"ruleId":"187","severity":1,"message":"193","line":13,"column":20,"nodeType":"189","messageId":"190","endLine":13,"endColumn":31},{"ruleId":"187","severity":1,"message":"194","line":13,"column":33,"nodeType":"189","messageId":"190","endLine":13,"endColumn":44},{"ruleId":"187","severity":1,"message":"200","line":18,"column":13,"nodeType":"189","messageId":"190","endLine":18,"endColumn":17},{"ruleId":"195","severity":1,"message":"201","line":27,"column":36,"nodeType":"197","endLine":27,"endColumn":38,"suggestions":"205"},{"ruleId":"187","severity":1,"message":"199","line":17,"column":13,"nodeType":"189","messageId":"190","endLine":17,"endColumn":17},{"ruleId":"195","severity":1,"message":"206","line":40,"column":8,"nodeType":"197","endLine":40,"endColumn":10,"suggestions":"207"},{"ruleId":"187","severity":1,"message":"188","line":11,"column":9,"nodeType":"189","messageId":"190","endLine":11,"endColumn":15},{"ruleId":"187","severity":1,"message":"191","line":11,"column":27,"nodeType":"189","messageId":"190","endLine":11,"endColumn":35},{"ruleId":"187","severity":1,"message":"192","line":12,"column":9,"nodeType":"189","messageId":"190","endLine":12,"endColumn":18},{"ruleId":"187","severity":1,"message":"193","line":12,"column":20,"nodeType":"189","messageId":"190","endLine":12,"endColumn":31},{"ruleId":"187","severity":1,"message":"194","line":12,"column":33,"nodeType":"189","messageId":"190","endLine":12,"endColumn":44},{"ruleId":"187","severity":1,"message":"188","line":7,"column":9,"nodeType":"189","messageId":"190","endLine":7,"endColumn":15},{"ruleId":"187","severity":1,"message":"208","line":7,"column":17,"nodeType":"189","messageId":"190","endLine":7,"endColumn":25},{"ruleId":"187","severity":1,"message":"191","line":7,"column":27,"nodeType":"189","messageId":"190","endLine":7,"endColumn":35},{"ruleId":"187","severity":1,"message":"192","line":8,"column":9,"nodeType":"189","messageId":"190","endLine":8,"endColumn":18},{"ruleId":"187","severity":1,"message":"193","line":8,"column":20,"nodeType":"189","messageId":"190","endLine":8,"endColumn":31},{"ruleId":"187","severity":1,"message":"188","line":12,"column":9,"nodeType":"189","messageId":"190","endLine":12,"endColumn":15},{"ruleId":"187","severity":1,"message":"191","line":12,"column":27,"nodeType":"189","messageId":"190","endLine":12,"endColumn":35},{"ruleId":"187","severity":1,"message":"192","line":13,"column":9,"nodeType":"189","messageId":"190","endLine":13,"endColumn":18},{"ruleId":"187","severity":1,"message":"193","line":13,"column":20,"nodeType":"189","messageId":"190","endLine":13,"endColumn":31},{"ruleId":"187","severity":1,"message":"194","line":13,"column":33,"nodeType":"189","messageId":"190","endLine":13,"endColumn":44},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'userID' is assigned a value but never used.","Identifier","unusedVar","'loggedIn' is assigned a value but never used.","'setUserID' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getQ'. Either include it or remove the dependency array.","ArrayExpression",["211"],"'mode' is assigned a value but never used.","'body' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateState'. Either include it or remove the dependency array.",["212"],"React Hook useEffect has missing dependencies: 'getA' and 'getQ'. Either include them or remove the dependency array.",["213"],["214"],"React Hook useEffect has missing dependencies: 'getA' and 'getC'. Either include them or remove the dependency array.",["215"],"'username' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"218","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [getQ]",{"range":"225","text":"226"},"Update the dependencies array to be: [updateState]",{"range":"227","text":"228"},"Update the dependencies array to be: [getA, getQ]",{"range":"229","text":"230"},{"range":"231","text":"228"},"Update the dependencies array to be: [getA, getC]",{"range":"232","text":"233"},[1091,1093],"[getQ]",[805,807],"[updateState]",[1158,1160],"[getA, getQ]",[801,803],[1248,1250],"[getA, getC]"]