[{"E:\\Programming\\simple_quora\\src\\index.js":"1","E:\\Programming\\simple_quora\\src\\App.js":"2","E:\\Programming\\simple_quora\\src\\reportWebVitals.js":"3","E:\\Programming\\simple_quora\\src\\components\\controllers\\askQuestion.js":"4","E:\\Programming\\simple_quora\\src\\components\\model\\questions.js":"5","E:\\Programming\\simple_quora\\src\\components\\views\\question.js":"6","E:\\Programming\\simple_quora\\src\\components\\views\\mainPoster.js":"7","E:\\Programming\\simple_quora\\src\\components\\views\\mainGetter.js":"8","E:\\Programming\\simple_quora\\src\\components\\controllers\\voteQuestions.js":"9","E:\\Programming\\simple_quora\\src\\components\\model\\enums.js":"10","E:\\Programming\\simple_quora\\src\\components\\navigation.js":"11","E:\\Programming\\simple_quora\\src\\components\\views\\headerBar.js":"12","E:\\Programming\\simple_quora\\src\\components\\model\\hosts.js":"13","E:\\Programming\\simple_quora\\src\\components\\controllers\\seeAnswers.js":"14","E:\\Programming\\simple_quora\\src\\components\\model\\answers.js":"15","E:\\Programming\\simple_quora\\src\\components\\views\\answer.js":"16","E:\\Programming\\simple_quora\\src\\components\\controllers\\voteAnswers.js":"17","E:\\Programming\\simple_quora\\src\\components\\pageContext.js":"18","E:\\Programming\\simple_quora\\src\\components\\controllers\\seeComments.js":"19","E:\\Programming\\simple_quora\\src\\components\\model\\comments.js":"20","E:\\Programming\\simple_quora\\src\\components\\views\\comment.js":"21"},{"size":560,"mtime":1608347958450,"results":"22","hashOfConfig":"23"},{"size":528,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":1493,"mtime":1608612556539,"results":"26","hashOfConfig":"23"},{"size":1208,"mtime":1608412984705,"results":"27","hashOfConfig":"23"},{"size":1172,"mtime":1608419790716,"results":"28","hashOfConfig":"23"},{"size":379,"mtime":1608413987050,"results":"29","hashOfConfig":"23"},{"size":377,"mtime":1608344414717,"results":"30","hashOfConfig":"23"},{"size":1080,"mtime":1608398548678,"results":"31","hashOfConfig":"23"},{"size":113,"mtime":1608266367316,"results":"32","hashOfConfig":"23"},{"size":875,"mtime":1608604600105,"results":"33","hashOfConfig":"23"},{"size":400,"mtime":1608412610867,"results":"34","hashOfConfig":"23"},{"size":123,"mtime":1608412590064,"results":"35","hashOfConfig":"23"},{"size":1726,"mtime":1608420178215,"results":"36","hashOfConfig":"23"},{"size":1194,"mtime":1608412979253,"results":"37","hashOfConfig":"23"},{"size":1184,"mtime":1608438069145,"results":"38","hashOfConfig":"23"},{"size":1086,"mtime":1608417353457,"results":"39","hashOfConfig":"23"},{"size":152,"mtime":1608419331627,"results":"40","hashOfConfig":"23"},{"size":1807,"mtime":1608585095576,"results":"41","hashOfConfig":"23"},{"size":1224,"mtime":1608603957293,"results":"42","hashOfConfig":"23"},{"size":1231,"mtime":1608586780755,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"su4cgr",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"E:\\Programming\\simple_quora\\src\\index.js",[],["91","92"],"E:\\Programming\\simple_quora\\src\\App.js",[],"E:\\Programming\\simple_quora\\src\\reportWebVitals.js",[],"E:\\Programming\\simple_quora\\src\\components\\controllers\\askQuestion.js",[],"E:\\Programming\\simple_quora\\src\\components\\model\\questions.js",[],"E:\\Programming\\simple_quora\\src\\components\\views\\question.js",["93"],"import React, { useContext } from 'react'\r\n\r\nimport ModeContext from \"../pageContext.js\"\r\n\r\nimport { Voters } from '../controllers/voteQuestions.js'\r\n\r\nexport function QuestionDisplay (props) {\r\n    const { mode, setMode } = useContext(ModeContext)\r\n    \r\n    let htmlOutput = []\r\n\r\n    props.questions.forEach(entry => {\r\n        let date = new Date(entry.creation_time)\r\n        let options = {dateStyle: 'long', timeStyle: 'short'}\r\n\r\n        let viewQuestion = () => setMode(['answer', entry.id])\r\n        \r\n        htmlOutput.push(\r\n            <div className=\"headline question-headline\" id={entry.id} onClick={viewQuestion} >\r\n                <Voters id={entry.id} votes={entry.votes} getQ={props.getQ} />\r\n                \r\n                <div className=\"textBody\">\r\n                    <div className=\"author\">{entry.author} asked:</div>\r\n                    <div className=\"mainText\">{entry.text}</div>\r\n                    <div className=\"date\">on {date.toLocaleString('en-US', options)}</div>\r\n                </div>\r\n            \r\n            </div>\r\n        )\r\n    });\r\n    \r\n    return (\r\n        <div>\r\n            {htmlOutput}\r\n        </div>\r\n    )\r\n}\r\n","E:\\Programming\\simple_quora\\src\\components\\views\\mainPoster.js",[],"E:\\Programming\\simple_quora\\src\\components\\views\\mainGetter.js",[],"E:\\Programming\\simple_quora\\src\\components\\controllers\\voteQuestions.js",[],"E:\\Programming\\simple_quora\\src\\components\\model\\enums.js",[],"E:\\Programming\\simple_quora\\src\\components\\navigation.js",[],"E:\\Programming\\simple_quora\\src\\components\\views\\headerBar.js",[],"E:\\Programming\\simple_quora\\src\\components\\model\\hosts.js",[],"E:\\Programming\\simple_quora\\src\\components\\controllers\\seeAnswers.js",["94","95"],"import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport ModeContext from \"../pageContext.js\"\r\n\r\nimport { getQuestions } from \"../model/questions.js\"\r\nimport { getAnswers, postAnswers } from \"../model/answers.js\"\r\n\r\nimport { QuestionDisplay } from \"../views/question.js\";\r\nimport { AnswerDisplay } from \"../views/answer.js\"\r\nimport { MainPoster } from \"../views/mainPoster.js\"\r\n\r\nfunction SeeAnswers (props) {\r\n    const [questionGet, setQuestionGet] = useState([])\r\n    const [answerGet, setAnswerGet] = useState([])\r\n    const [answerPost, setAnswerPost] = useState('')\r\n\r\n    const { mode, setMode } = useContext(ModeContext)\r\n\r\n    const backToQuestions = () => setMode(['question', null])\r\n\r\n    async function getQ () {\r\n        setQuestionGet(await getQuestions({'id': props.question_id}))\r\n    }\r\n\r\n    async function getA () {\r\n        setAnswerGet(await getAnswers({'question_id': props.question_id}))\r\n    }\r\n\r\n    async function postA () {\r\n        await postAnswers({\"text\": answerPost, \"author\": \"rjerling\", \"question\": props.question_id})\r\n        getA()\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQ()\r\n        getA()\r\n    }, [])  // empty array passed to prevent infinite firing\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"pageTopSwitch\">\r\n                <button className=\"mainButton\" onClick={backToQuestions}>Back to Questions Page</button>\r\n            </div>\r\n            <MainPoster setFunc={setAnswerPost} postFunc={postA} placeholder=\"Help the asker out!\" buttonText=\"Answer!\" />\r\n            <QuestionDisplay questions={questionGet} getQ={getQ} />\r\n            <AnswerDisplay answers={answerGet} getA={getA} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeeAnswers\r\n","E:\\Programming\\simple_quora\\src\\components\\model\\answers.js",[],"E:\\Programming\\simple_quora\\src\\components\\views\\answer.js",["96"],"import React, { useContext } from 'react'\r\n\r\nimport ModeContext from \"../pageContext.js\"\r\n\r\nimport { Voters } from '../controllers/voteAnswers.js'\r\n\r\nexport function AnswerDisplay (props) {\r\n    const { mode, setMode } = useContext(ModeContext)\r\n\r\n    let htmlOutput = []\r\n\r\n    props.answers.forEach(entry => {\r\n        let date = new Date(entry.creation_time)\r\n        let options = {dateStyle: 'long', timeStyle: 'short'}\r\n\r\n        const viewAnswer = () => setMode(['comment', entry.id])\r\n        \r\n        htmlOutput.push(\r\n            <div className=\"headline answer-headline\" id={entry.id} onClick={viewAnswer} >\r\n                <Voters id={entry.id} q_id={entry.question} votes={entry.votes} getA={props.getA} />\r\n                \r\n                <div className=\"textBody\">\r\n                    <div className=\"author\">{entry.author} answered:</div>\r\n                    <div className=\"mainText\">{entry.text}</div>\r\n                    <div className=\"date\">on {date.toLocaleString('en-US', options)}</div>\r\n                </div>\r\n            \r\n            </div>\r\n        )\r\n    });\r\n    \r\n    return (\r\n        <div>\r\n            {htmlOutput}\r\n        </div>\r\n    )\r\n}\r\n","E:\\Programming\\simple_quora\\src\\components\\controllers\\voteAnswers.js",[],"E:\\Programming\\simple_quora\\src\\components\\pageContext.js",[],"E:\\Programming\\simple_quora\\src\\components\\controllers\\seeComments.js",["97","98"],"import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport ModeContext from \"../pageContext.js\"\r\n\r\nimport { getAnswers } from \"../model/answers.js\"\r\nimport { getComments, postComments } from \"../model/comments.js\"\r\n\r\nimport { AnswerDisplay } from \"../views/answer.js\";\r\nimport { CommentDisplay } from \"../views/comment.js\"\r\nimport { MainPoster } from \"../views/mainPoster.js\"\r\n\r\nfunction SeeComments (props) {\r\n    const [answerGet, setAnswerGet] = useState([])\r\n    const [commentGet, setCommentGet] = useState([])\r\n    const [commentPost, setCommentPost] = useState('')\r\n\r\n    const { mode, setMode } = useContext(ModeContext)\r\n\r\n    async function backToAnswers () {\r\n        let question_id = await getAnswers({'id': props.answer_id})\r\n        setMode(['answer', question_id[0].question])\r\n    }\r\n\r\n    async function getA () {\r\n        setAnswerGet(await getAnswers({'id': props.answer_id}))\r\n    }\r\n\r\n    async function getC () {\r\n        setCommentGet(await getComments({'answer_id': props.answer_id}))\r\n    }\r\n\r\n    async function postC () {\r\n        await postComments({\"text\": commentPost, \"author\": \"bsun\", \"answer\": props.answer_id})\r\n        getC()\r\n    }\r\n\r\n    useEffect(() => {\r\n        getA()\r\n        getC()\r\n    }, [])  // empty array passed to prevent infinite firing\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"pageTopSwitch\">\r\n                <button className=\"mainButton\" onClick={backToAnswers}>Back to Answers Page</button>\r\n            </div>\r\n            <MainPoster setFunc={setCommentPost} postFunc={postC} placeholder=\"Comment...\" buttonText=\"Post Comment\" />\r\n            <AnswerDisplay answers={answerGet} getA={getA} />\r\n            <CommentDisplay comments={commentGet} getC={getC} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeeComments\r\n","E:\\Programming\\simple_quora\\src\\components\\model\\comments.js",[],"E:\\Programming\\simple_quora\\src\\components\\views\\comment.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":8,"column":13,"nodeType":"105","messageId":"106","endLine":8,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":17,"column":13,"nodeType":"105","messageId":"106","endLine":17,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":37,"column":8,"nodeType":"109","endLine":37,"endColumn":10,"suggestions":"110"},{"ruleId":"103","severity":1,"message":"104","line":8,"column":13,"nodeType":"105","messageId":"106","endLine":8,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":17,"column":13,"nodeType":"105","messageId":"106","endLine":17,"endColumn":17},{"ruleId":"107","severity":1,"message":"111","line":40,"column":8,"nodeType":"109","endLine":40,"endColumn":10,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'mode' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getA' and 'getQ'. Either include them or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has missing dependencies: 'getA' and 'getC'. Either include them or remove the dependency array.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [getA, getQ]",{"range":"121","text":"122"},"Update the dependencies array to be: [getA, getC]",{"range":"123","text":"124"},[1158,1160],"[getA, getQ]",[1248,1250],"[getA, getC]"]